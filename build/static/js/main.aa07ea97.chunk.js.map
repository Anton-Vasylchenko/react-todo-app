{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/add-item/index.js","components/add-item/add-item.js","components/trash-basket-item/index.js","components/trash-basket-item/trash-basket-item.js","components/trash-basket/index.js","components/trash-basket/trash-basket.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","filter","length","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","onFilterChange","clazz","AddItem","onLabelChange","onSubmit","preventDefault","onItemAdded","TrashBasketItem","onRestoreItem","TrashBasket","toggle","basketToggle","trashList","trash","onClearBasket","items","basketList","App","maxId","todoData","createTodoItem","trashData","deleteItem","idx","findIndex","el","delItem","newArray","slice","addItem","text","newItem","toggleProperty","returnIdx","returnItem","arr","propName","oldItem","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","trashCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa07ea97.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from \"./search-panel\";\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n  state = {\r\n    term: ''\r\n  };\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({ term });\r\n    this.props.onSearchChange(term);\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <input type=\"text\"\r\n        className=\"form-control search-input\"\r\n        placeholder=\"type to search\"\r\n        value={this.state.term}\r\n        onChange={ this.onSearchChange }\r\n      />\r\n    )\r\n  };\r\n}\r\n","import TodoListItem from \"./todo-list-item\";\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport './todo-list-item.css';\r\n\r\n\r\nconst TodoListItem = ({ label, onDeleted, onToggleImportant, onToggleDone, done, important }) => {\r\n\r\n  let classNames = 'todo-list-item';\r\n\r\n  if (done) {\r\n      classNames += ' done';\r\n  }\r\n\r\n  if (important) {\r\n      classNames += ' important';\r\n  }\r\n  \r\n  return (\r\n    <span className={classNames}>\r\n      <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={ onToggleDone }\r\n        >\r\n        {label}\r\n      </span>\r\n\r\n      <button type=\"button\"\r\n          className=\"btn btn-outline-success btn-sm float-right\"\r\n          onClick={ onToggleImportant }\r\n        >\r\n        <i className=\"fa fa-exclamation\" />\r\n      </button>\r\n\r\n      <button type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm float-right\"\r\n          onClick={onDeleted}\r\n        >\r\n        <i className=\"fa fa-trash-o\" />\r\n      </button>          \r\n    </span>\r\n  );\r\n};\r\n\r\n\r\nexport default TodoListItem;\r\n\r\n\r\n\r\n","import TodoList from \"./todo-list\";\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone, filter }) => {\r\n\r\n  if(todos.length === 0) {\r\n    const label = `${filter} list is empty`;\r\n    return <div className=\"todo-list-empty\">{ label }</div>\r\n  }\r\n\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n            {...itemProps }\r\n            onDeleted={() => onDeleted(id) }\r\n            onToggleImportant={() => onToggleImportant(id) }\r\n            onToggleDone={() => onToggleDone(id) }\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      { elements }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n\r\n","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        { name: 'all', label: 'All' },\r\n        { name: 'active', label: 'Active' },\r\n        { name: 'done', label: 'Done' }\r\n    ]\r\n\r\n    render() {\r\n\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n\r\n            return (\r\n                <button type=\"button\"\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={() => onFilterChange(name) }\r\n                        >\r\n                        {label}\r\n                </button>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import AddItem from \"./add-item\";\n\nexport default AddItem;\n","import React, { Component } from 'react';\nimport './add-item.css';\n\n\nclass AddItem extends Component {\n\n  state = {\n    label: ''\n  }\n\n  onLabelChange = (e) => {\n    this.setState({\n      label: e.target.value\n    })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.onItemAdded(this.state.label);\n    this.setState({\n      label: ''\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"d-flex add-item-form\"\n        onSubmit={this.onSubmit}\n        >\n        <input type=\"text\"\n          className=\"form-control\"\n          placeholder=\"What needs to be done?\"\n          onChange={ this.onLabelChange }\n          value={this.state.label}\n          />\n        <button\n            className=\"btn btn-outline-secondary btn-new-item\"\n          >\n          Add new item\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default AddItem;\n","import TrashBasketItem from \"./trash-basket-item\";\r\n\r\nexport default TrashBasketItem;\r\n","import React from 'react';\r\nimport './trash-basket-item.css';\r\n\r\n\r\nconst TrashBasketItem = ({ label, onRestoreItem }) => {\r\n  \r\n  return (\r\n    <span className=\"trash-basket-item\">\r\n      <span\r\n          className=\"trash-basket-item-label\"\r\n        >\r\n        { label }\r\n      </span>\r\n\r\n    <button type=\"button\"\r\n        className=\"btn btn-outline-info btn-sm float-right\"\r\n        onClick={ onRestoreItem }\r\n      >\r\n        <i className=\"fas fa-redo-alt\"></i>\r\n    </button>\r\n\r\n    </span>\r\n  );\r\n};\r\n\r\n\r\nexport default TrashBasketItem;\r\n\r\n\r\n\r\n","import TrashBasket from \"./trash-basket\";\n\nexport default TrashBasket;","import React, { Component } from 'react';\nimport TrashBasketItem from '../trash-basket-item';\n\nimport './trash-basket.css';\n\nexport default class TrashBaster extends Component {\n\n  state = {\n    toggle: true\n  };\n\n  basketToggle = () => {\n    this.setState(({toggle}) => {\n      const newToggle = !toggle;\n      return({\n        toggle: newToggle\n      })\n    })\n  }\n\n  basketList() {\n    const { trashList, onRestoreItem } = this.props;\n\n    const msg = 'empty';\n\n    if(trashList.length === 0) {\n      return (\n        <div className=\"empty-msg-baket\">\n          { msg }\n        </div>\n      );\n    }\n\n    const elements = trashList.map((item) => {\n      const { id, ...itemProps } = item;\n      return (\n        <li key={id} className=\"list-group-item\">\n          <TrashBasketItem\n              { ...itemProps }\n              onRestoreItem = { () => onRestoreItem(id) }\n          />\n        </li>\n      );\n    });\n    return elements;\n  }\n\n  render() {\n    const { trash, onClearBasket } = this.props;\n    const { toggle } = this.state;\n    let items = this.basketList();\n\n    let classNames = 'trash-basket-list'\n\n    if(toggle) {\n      classNames += ' d-none';\n    }\n\n    return(\n      <div className=\"trash-basket-wrapper\">\n          <div className=\"trash-basket\">\n            <span className=\"trash-count\"> { trash } </span>\n            <i className=\"fa fa-trash-o\" onClick={ this.basketToggle }/>\n          </div>\n          <div className={ classNames } >\n            <button\n              className=\"btn btn-outline-danger basket-clear-btn\"\n              onClick = { onClearBasket }\n            >\n              Empty\n            </button>\n            { items }\n          </div>\n      </div>\n    );\n  }\n}","import App from './app';\r\n\r\nexport default App;","import React, { Component } from \"react\";\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport AddItem from '../add-item';\r\nimport TrashBasket from '../trash-basket';\r\n\r\nimport './app.css';\r\n\r\n\r\nexport default class App extends Component  {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Make Awesome App'),\r\n            this.createTodoItem('Have a lunch')\r\n        ],\r\n        trashData: [],\r\n        term: '',\r\n        filter: 'all' // all, active, done\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData, trashData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            const delItem = todoData.filter((el) => el.id === id);\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            delItem[0].idx = idx;\r\n\r\n            const delArray = [\r\n                ...trashData,\r\n                ...delItem,\r\n            ];\r\n\r\n            return {\r\n              todoData: newArray,\r\n              trashData: delArray\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n\r\n        if(text.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState( ({ todoData })  => {\r\n            const newArray = [ ...todoData, newItem ];\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n\r\n    }\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n        const oldItem = arr[idx];\r\n        const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        });\r\n    };\r\n\r\n    onRestoreItem = (id) => {\r\n        this.setState(({todoData, trashData}) => {            \r\n            const returnIdx = trashData.findIndex((el) => el.id === id);\r\n            const returnItem = { ...trashData[returnIdx] };\r\n            const idx = returnItem.idx;            \r\n            delete returnItem.idx;\r\n            \r\n            const newTodoArray = [\r\n                ...todoData.slice(0, idx),\r\n                returnItem,\r\n                ...todoData.slice(idx)\r\n            ];\r\n\r\n            const newTrashData = [\r\n                ...trashData.slice(0, returnIdx),\r\n                ...trashData.slice(returnIdx+1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newTodoArray,\r\n                trashData: newTrashData\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    onClearBasket = () => {\r\n        this.setState(({trashData}) => {\r\n            return {\r\n                trashData: []\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({ term })\r\n    }\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter })\r\n    }\r\n\r\n    search(items, term) {\r\n        if(term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        })\r\n    }\r\n\r\n\r\n    filter(items, filter) {\r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((el) => !el.done)\r\n            case 'done':\r\n                return items.filter((el) => el.done)\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { todoData, term, filter, trashData } = this.state;\r\n\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n        const trashCount = trashData.length;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={ todoCount } done={ doneCount } />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                        onSearchChange={ this.onSearchChange }\r\n                    />\r\n                    <ItemStatusFilter\r\n                        filter={filter}\r\n                        onFilterChange={this.onFilterChange}\r\n                    />\r\n                </div>\r\n\r\n                <TodoList\r\n                    todos={visibleItems}\r\n                    onDeleted={ this.deleteItem }\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleDone={this.onToggleDone}\r\n                    filter={filter}\r\n                />\r\n\r\n                <AddItem onItemAdded={ this.addItem }/>\r\n                <TrashBasket\r\n                    trash = { trashCount }\r\n                    trashList = { trashData }       \r\n                    onRestoreItem = { this.onRestoreItem }    \r\n                    onClearBasket = { this.onClearBasket }         \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />,\r\n    document.getElementById('root'));"],"sourceRoot":""}